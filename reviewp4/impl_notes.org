Замечания по реализации REST-интерфейса к БД ReView

* Backend-сервер

Реализуется с использованием фреймворка Python FastAPI. По умолчанию ввод-вывод
(тела запросов и ответов) передаются в формате Json. Критичные по времени передачи
данных запросы планируется передавать и получать в формате MessagePack (двоичном).

Текущая реализация доступна через URL http://rv17:9998. Интерфейс самодокументируемый
в формате OpenAPI (Swagger) через URL http://192.168.4.36:9998/docs/

Планируется переносить запросы из текущей реализации XML_RPC на сервер FastAPI, при этом:

- код приводится к стндарту Python3
- делается рефакторинг чтобы увеличить производительность и убрать старый/неиспользуемый
  код

** Авторизация/аутентификация

В текущей реализации авторизация пользователя реализована через заголовок 
X-Pangea-User, в котором передается идентификатор (логин) пользователя. В дальнейшем,
планируется делать авторизацию через токен JWT, передаваемый в заголовке 
X-Pangea-Authorization, или через стандартный заголовок Authorization: Bearer <JWT> с использованием
стандартной схемы аутентификации (digest или OAuth2).


* Клиенты c++

Основную часть запросов предлагается передавать в формате Json. Критичные по объему данных
запросы при этом можно (опционально) передавать в формате MessagePack. При этом, формат ответа
задается через заголовок Accept (application/json или application/octet-stream), сервер сообщает
формат ответа через заголовок Content-Type.

Таким образом, в промежуточном состоянии часть запросов будет продолжать передаваться через
XML-RPC, а часть запросов - через новый REST-API. Потребуется новая реализация библиотеки
доступа на основе существующей libMessageServer2, в которой нужно учитывать, что:

- часть запросов целесообразно подавать через GET, параметры запроса при этом идут в URL
- часть запросов пойдут через PUT/POST, параметры запроса будут частично передаваться в URL, 
  частично - в теле запроса

